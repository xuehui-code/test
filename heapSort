   public static void heapSort(long[] array) {
        // 1. 建大堆
        createHeap(array, array.length);
 
        // 2. 进行选择的过程，一共需要 array.length - 1 组
        for (int i = 0; i < array.length - 1; i++) {
            // 无序：[0, array.length - i)
            swap(array, 0, array.length - i - 1);
            // 无序：[0, array.length - i - 1)
            adjustDown(array, array.length - i - 1, 0);
        }
    }
 
    private static void adjustDown(long[] array, int size, int index) {
        while (2 * index + 1 < size) {
            int maxIndex = 2 * index + 1;
            if (maxIndex + 1 < size && array[maxIndex + 1] > array[maxIndex]) {
                maxIndex++;
            }
 
            if (array[index] >= array[maxIndex]) {
                break;
            }
 
            swap(array, index, maxIndex);
 
            index = maxIndex;
        }
    }
 
    private static void createHeap(long[] array, int size) {
        for (int i = (size - 2) / 2; i >= 0; i--) {
            adjustDown(array, size, i);
        }
    }
